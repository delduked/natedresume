name: TagReleaseBuildPushDeploy
on:
  push:
    branches:
      - civo

jobs:
  setup:
    runs-on: [self-hosted, Linux, X64, natedresume]
    outputs:
      tagname: ${{ steps.create_tag.outputs.tagname }}
      tag: ${{ steps.create_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Calculate next release tag
        id: create_tag
        run: |
          VERSION=$(git rev-parse --short HEAD)
          DATE=$(date +'%Y%m%d')
          VVERSION=${DATE}v_${VERSION}
          echo "tag=v_${VERSION}" >> $GITHUB_OUTPUT
          echo "tagname=${VVERSION}" >> $GITHUB_OUTPUT

      - name: Build and push docker image
        id: docker_build
        run : |
          echo "building natedresume image"
          export CR_PAT=${{ secrets.GH_RUNNER }} ; echo $CR_PAT | docker login ghcr.io -u delduked --password-stdin
          docker build -t ghcr.io/delduked/natedresume:${{ steps.create_tag.outputs.tag }} ./ -f ./nated.dockerfile
          docker push ghcr.io/delduked/natedresume:${{ steps.create_tag.outputs.tag }} 
          echo "image natedresume was built and pushed succesfully."
  helm:
    needs: setup
    runs-on: [self-hosted, Linux, X64, natedresume]
    steps:
      
      - uses: actions/checkout@v3

      - name: Set up Kubeconfig
        run: |
          echo "${{ secrets.CIVO_KUBE_CONFIG }}" > kubeconfig.yml
        shell: bash

      - name: Helm Init
        id: helm_init
        run: |
          helm init
        shell: bash

      - name: Helm Test
        id: helm_test
        run: |
          helm install natedca ./charts --namespace natedca --set VERSION=${{ needs.setup.outputs.tag }} --dry-run --kubeconfig ./kubeconfig.yml --kube-apiserver ${{ secrets.CIVO_API_ENDPOINT }}

      - name: Helm Deploy
        if: steps.helm_test.outcome == 'success'
        id: helm_deploy
        run: |
          helm install natedca ./charts --namespace natedca --set VERSION=${{ needs.setup.outputs.tag }} --kubeconfig ./kubeconfig.yml --kube-apiserver ${{ secrets.CIVO_API_ENDPOINT }}

  release:
    needs: helm
    runs-on: [self-hosted, Linux, X64, natedresume]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RUNNER }}
        with:
          tag_name: ${{ needs.setup.outputs.tag }}
          release_name: ${{ needs.setup.outputs.tagname }}
          draft: false
          prerelease: false